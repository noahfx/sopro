{
  "_id" : "_design/soprochat",
  "views" : {
    "user_by_name_email" : {
      "map" : "function(doc){ if(doc.soproModel==='user'){ emit(doc.username, doc); emit(doc.email, doc); }}"
    },
    "user_by_whatever": {
      "map" : "function(doc){if(doc.soproModel==='user'){for(prop in doc){if(doc.hasOwnProperty(prop)){emit([prop, doc[prop]], doc) } } } }"
    },
    "user_by__id" : {
      "map" : "function(doc){ if(doc.soproModel==='user'){ emit(doc._id, doc) }}"
    },
    "user_by_username" : {
      "map" : "function(doc){ if(doc.soproModel==='user'){ emit(doc.username, doc) }}"
    },
    "user_by_email" : {
      "map" : "function(doc){ if(doc.soproModel==='user'){ emit(doc.email, doc) }}"
    },
    "identity_by_for_userid": {
      "map" : "function(doc){ if(doc.soproModel==='identity'){ emit(doc.for_userid, doc) }}"
    },
    "identity_by_channel" : {
      "map" : "function(doc){ if(doc.soproModel==='identity'){for(var i=0; i<doc.channels.length; i++){emit( doc.channels[i], doc) } }}"
    },
    "docs_by_soproModel" : {
      "map" : "function(doc){ emit(doc.soproModel, doc) }"
    },
    "pwdcred_by_for_userid" : {
      "map" : "function(doc){ if(doc.soproModel==='pwdcred'){ emit(doc.for_userid, doc) }}"
    },
    "passwordResetToken_by_token" : {
      "map" : "function(doc){ if(doc.soproModel==='passwordResetToken' && new Date().valueOf() < doc.expiryTimeMs){ emit(doc.token, doc) }}"
    },
    "apiToken_by_for_identityid" : {
      "map" : "function(doc){ if(doc.soproModel==='apiToken'){ emit(doc.for_identityid, doc) }}"
    },
    "apiToken_by_token" : {
      "map" : "function(doc){ if(doc.soproModel==='apiToken'){ emit(doc.token, doc) }}"
    },
    "channel_by_name" : {
      "map" : "function(doc){ if(doc.soproModel==='channel'){ emit( doc.name, doc) }}"
    }
  }
}